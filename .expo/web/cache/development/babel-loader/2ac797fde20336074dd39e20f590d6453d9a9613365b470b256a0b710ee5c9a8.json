{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction MapList() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedImage = _useState2[0],\n    setSelectedImage = _useState2[1];\n  var navigation = useNavigation();\n  var _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n  var pickImage = function _callee() {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: false,\n            quality: 1\n          }));\n        case 2:\n          result = _context.sent;\n          if (!result.canceled) {\n            setSelectedImage(result.assets[0].uri);\n          }\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.topBanner,\n      children: [_jsx(Image, {\n        source: require(\"./assets/logo.png\"),\n        style: styles.logo\n      }), _jsx(Text, {\n        style: styles.welcomeText,\n        children: \"Journeysmith\"\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Pressable, {\n        style: styles.addButton,\n        onPress: pickImage,\n        children: _jsx(Image, {\n          source: require(\"./assets/add-map-button.png\"),\n          style: styles.addButtonImage\n        })\n      }), selectedImage && _jsx(Pressable, {\n        onPress: function onPress() {\n          return navigation.navigate('MapScreen', {\n            imageUri: selectedImage\n          });\n        },\n        children: _jsx(Image, {\n          source: {\n            uri: selectedImage\n          },\n          style: styles.uploadedImage\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: '#1B1921',\n    height: '80%',\n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    flexDirection: 'row'\n  },\n  topBanner: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    width: '100%',\n    height: '20%',\n    backgroundColor: '#1B1921',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  logo: {\n    width: 230,\n    height: 230\n  },\n  welcomeText: {\n    fontSize: 50,\n    color: '#rgba(245, 245, 220, 1)',\n    fontFamily: 'Enchanted Land'\n  },\n  addButton: {\n    width: 150,\n    height: 150\n  },\n  addButtonImage: {\n    width: 150,\n    height: 150,\n    marginLeft: 30\n  },\n  uploadedImage: {\n    width: 150,\n    height: 150,\n    borderRadius: 10,\n    borderColor: '#rgba(235, 235, 200, 1)',\n    borderWidth: 10,\n    marginLeft: 40\n  },\n  returnButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10,\n    backgroundColor: '#rgba(245, 245, 220, 1)',\n    borderRadius: 10\n  },\n  returnButtonText: {\n    color: '#000'\n  }\n});\nexport default MapList;","map":{"version":3,"names":["React","useState","View","Text","Image","StyleSheet","Pressable","Dimensions","ImagePicker","useNavigation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MapList","_useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","navigation","_Dimensions$get","get","width","height","pickImage","_callee","result","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","quality","sent","canceled","assets","uri","stop","Promise","children","style","styles","topBanner","source","require","logo","welcomeText","buttonContainer","addButton","onPress","addButtonImage","navigate","imageUri","uploadedImage","create","flex","backgroundColor","position","bottom","right","flexDirection","top","justifyContent","alignItems","fontSize","color","fontFamily","marginLeft","borderRadius","borderColor","borderWidth","returnButton","padding","returnButtonText"],"sources":["/home/chase/Client/journeysmith/MapList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Image, StyleSheet, Pressable, Dimensions } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useNavigation, NavigationProp } from '@react-navigation/native';\n\n//Define RootStackParamList\ntype RootStackParamList = {\n  Home: undefined;\n  MapList: undefined;\n  MapScreen: { imageUri: string };\n};\n\nfunction MapList() {\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const navigation = useNavigation<NavigationProp<RootStackParamList>>();\n  const {width, height} = Dimensions.get('window');\n\n  const pickImage = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: false,\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setSelectedImage(result.assets[0].uri);\n    }\n  };\n\n  return (\n    <>\n      <View style={styles.topBanner}>\n        <Image source={require('./assets/logo.png')} style={styles.logo}></Image>\n        <Text style={styles.welcomeText}>Journeysmith</Text>\n      </View>\n      <View style={styles.buttonContainer}>\n        <Pressable style={styles.addButton} onPress={pickImage}>\n          <Image\n            source={require('./assets/add-map-button.png')}\n            style={styles.addButtonImage}\n          />\n        </Pressable>\n        {selectedImage && (\n          <Pressable onPress={() => navigation.navigate('MapScreen', { imageUri: selectedImage })}>\n            <Image source={{ uri: selectedImage }} style={styles.uploadedImage} />\n          </Pressable>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: '#1B1921',\n    height: '80%',\n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    flexDirection: 'row',\n  },\n  topBanner: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    width: '100%',\n    height: '20%',\n    backgroundColor: '#1B1921',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  logo: {\n    width: 230,\n    height: 230,\n  },\n  welcomeText: {\n    fontSize: 50,\n    color: '#rgba(245, 245, 220, 1)',\n    fontFamily: 'Enchanted Land',\n  },\n  addButton: {\n    width: 150,\n    height: 150,\n  },\n  addButtonImage: {\n    width: 150,\n    height: 150,\n    marginLeft: 30,\n  },\n  uploadedImage: {\n    width: 150,\n    height: 150,\n    borderRadius: 10,\n    borderColor: '#rgba(235, 235, 200, 1)',\n    borderWidth: 10,\n    marginLeft: 40,\n  },\n  returnButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10,\n    backgroundColor: '#rgba(245, 245, 220, 1)',\n    borderRadius: 10,\n  },\n  returnButtonText: {\n    color: '#000',\n  },\n});\n\nexport default MapList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAExC,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,SAASC,aAAa,QAAwB,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA,EAAAC,QAAA,IAAAC,SAAA;AASzE,SAASC,OAAOA,CAAA,EAAG;EACjB,IAAAC,SAAA,GAA0ChB,QAAQ,CAAgB,IAAI,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhEG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAMI,UAAU,GAAGb,aAAa,CAAqC,CAAC;EACtE,IAAAc,eAAA,GAAwBhB,UAAU,CAACiB,GAAG,CAAC,QAAQ,CAAC;IAAzCC,KAAK,GAAAF,eAAA,CAALE,KAAK;IAAEC,MAAM,GAAAH,eAAA,CAANG,MAAM;EAEpB,IAAMC,SAAS,GAAG,SAAAC,QAAA;IAAA,IAAAC,MAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAAAL,mBAAA,CAAAM,KAAA,CACK5B,WAAW,CAAC6B,uBAAuB,CAAC;YACvDC,UAAU,EAAE9B,WAAW,CAAC+B,gBAAgB,CAACC,MAAM;YAC/CC,aAAa,EAAE,KAAK;YACpBC,OAAO,EAAE;UACX,CAAC,CAAC;QAAA;UAJIb,MAAM,GAAAI,QAAA,CAAAU,IAAA;UAMZ,IAAI,CAACd,MAAM,CAACe,QAAQ,EAAE;YACpBvB,gBAAgB,CAACQ,MAAM,CAACgB,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;UACxC;QAAC;QAAA;UAAA,OAAAb,QAAA,CAAAc,IAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA,CACF;EAED,OACEnC,KAAA,CAAAE,SAAA;IAAAkC,QAAA,GACEpC,KAAA,CAACX,IAAI;MAACgD,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,GAC5BtC,IAAA,CAACP,KAAK;QAACiD,MAAM,EAAEC,OAAO,oBAAoB,CAAE;QAACJ,KAAK,EAAEC,MAAM,CAACI;MAAK,CAAQ,CAAC,EACzE5C,IAAA,CAACR,IAAI;QAAC+C,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAP,QAAA,EAAC;MAAY,CAAM,CAAC;IAAA,CAChD,CAAC,EACPpC,KAAA,CAACX,IAAI;MAACgD,KAAK,EAAEC,MAAM,CAACM,eAAgB;MAAAR,QAAA,GAClCtC,IAAA,CAACL,SAAS;QAAC4C,KAAK,EAAEC,MAAM,CAACO,SAAU;QAACC,OAAO,EAAEhC,SAAU;QAAAsB,QAAA,EACrDtC,IAAA,CAACP,KAAK;UACJiD,MAAM,EAAEC,OAAO,8BAA8B,CAAE;UAC/CJ,KAAK,EAAEC,MAAM,CAACS;QAAe,CAC9B;MAAC,CACO,CAAC,EACXxC,aAAa,IACZT,IAAA,CAACL,SAAS;QAACqD,OAAO,EAAE,SAATA,OAAOA,CAAA;UAAA,OAAQrC,UAAU,CAACuC,QAAQ,CAAC,WAAW,EAAE;YAAEC,QAAQ,EAAE1C;UAAc,CAAC,CAAC;QAAA,CAAC;QAAA6B,QAAA,EACtFtC,IAAA,CAACP,KAAK;UAACiD,MAAM,EAAE;YAAEP,GAAG,EAAE1B;UAAc,CAAE;UAAC8B,KAAK,EAAEC,MAAM,CAACY;QAAc,CAAE;MAAC,CAC7D,CACZ;IAAA,CACG,CAAC;EAAA,CACP,CAAC;AAEP;AAEA,IAAMZ,MAAM,GAAG9C,UAAU,CAAC2D,MAAM,CAAC;EAC/BP,eAAe,EAAE;IACfQ,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BxC,MAAM,EAAE,KAAK;IACbD,KAAK,EAAE,MAAM;IACb0C,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE,CAAC;IACRC,aAAa,EAAE;EACjB,CAAC;EACDlB,SAAS,EAAE;IACTe,QAAQ,EAAE,UAAU;IACpBI,GAAG,EAAE,CAAC;IACNF,KAAK,EAAE,CAAC;IACR5C,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,KAAK;IACbwC,eAAe,EAAE,SAAS;IAC1BM,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE,QAAQ;IACpBH,aAAa,EAAE;EACjB,CAAC;EACDf,IAAI,EAAE;IACJ9B,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC;EACD8B,WAAW,EAAE;IACXkB,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,yBAAyB;IAChCC,UAAU,EAAE;EACd,CAAC;EACDlB,SAAS,EAAE;IACTjC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC;EACDkC,cAAc,EAAE;IACdnC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXmD,UAAU,EAAE;EACd,CAAC;EACDd,aAAa,EAAE;IACbtC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXoD,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,yBAAyB;IACtCC,WAAW,EAAE,EAAE;IACfH,UAAU,EAAE;EACd,CAAC;EACDI,YAAY,EAAE;IACZd,QAAQ,EAAE,UAAU;IACpBI,GAAG,EAAE,EAAE;IACPF,KAAK,EAAE,EAAE;IACTa,OAAO,EAAE,EAAE;IACXhB,eAAe,EAAE,yBAAyB;IAC1CY,YAAY,EAAE;EAChB,CAAC;EACDK,gBAAgB,EAAE;IAChBR,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe3D,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}