{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DraggablePin = function DraggablePin(_ref) {\n  var initialPosition = _ref.initialPosition,\n    onDragEnd = _ref.onDragEnd,\n    draggable = _ref.draggable;\n  var _useState = useState(initialPosition),\n    _useState2 = _slicedToArray(_useState, 2),\n    position = _useState2[0],\n    setPosition = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isDragging = _useState4[0],\n    setIsDragging = _useState4[1];\n  var panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return draggable;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      if (draggable) {\n        setIsDragging(true);\n      }\n    },\n    onPanResponderMove: function onPanResponderMove(e, gestureState) {\n      if (isDragging) {\n        setPosition({\n          x: gestureState.moveX - 15,\n          y: gestureState.moveY - 15\n        });\n      }\n    },\n    onPanResponderRelease: function onPanResponderRelease() {\n      if (isDragging) {\n        setIsDragging(false);\n        onDragEnd(position);\n      }\n    }\n  });\n  return _jsx(View, _objectSpread(_objectSpread({}, panResponder.panHandlers), {}, {\n    style: [styles.pin, {\n      top: position.y,\n      left: position.x,\n      backgroundColor: isDragging ? 'blue' : 'transparent'\n    }],\n    children: _jsx(Image, {\n      style: styles.pinImage,\n      source: require(\"./assets/pinOne.png\")\n    })\n  }));\n};\nvar styles = StyleSheet.create({\n  pin: {\n    position: 'absolute',\n    width: 30,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 15\n  },\n  pinImage: {\n    width: 50,\n    height: 50\n  }\n});\nexport default DraggablePin;","map":{"version":3,"names":["React","useState","View","PanResponder","StyleSheet","Text","Image","jsx","_jsx","DraggablePin","_ref","initialPosition","onDragEnd","draggable","_useState","_useState2","_slicedToArray","position","setPosition","_useState3","_useState4","isDragging","setIsDragging","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","e","gestureState","x","moveX","y","moveY","onPanResponderRelease","_objectSpread","panHandlers","style","styles","pin","top","left","backgroundColor","children","pinImage","source","require","width","height","justifyContent","alignItems","borderRadius"],"sources":["/home/chase/Client/journeysmith/DraggablePin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, PanResponder, StyleSheet, Text, Image } from 'react-native';\n\nconst DraggablePin = ({ initialPosition, onDragEnd, draggable }) => {\n  const [position, setPosition] = useState(initialPosition);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: () => draggable,\n    onPanResponderGrant: () => {\n      if (draggable) {\n        setIsDragging(true);\n      }\n    },\n    onPanResponderMove: (e, gestureState) => {\n      if (isDragging) {\n        setPosition({\n          x: gestureState.moveX - 15, // Adjust for centering the pin\n          y: gestureState.moveY - 15,\n        });\n      }\n    },\n    onPanResponderRelease: () => {\n      if (isDragging) {\n        setIsDragging(false);\n        onDragEnd(position);\n      }\n    },\n  });\n\n  return (\n    <View\n      {...panResponder.panHandlers}\n      style={[styles.pin, { top: position.y, left: position.x, backgroundColor: isDragging ? 'blue' : 'transparent' }]}\n    >\n      <Image style={styles.pinImage} source={require('./assets/pinOne.png')} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  pin: {\n    position: 'absolute',\n    width: 30,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 15, // Make it circular\n  },\n  pinImage: {\n    width: 50,\n    height: 50,\n  },\n});\n\nexport default DraggablePin;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGxC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAkD;EAAA,IAA5CC,eAAe,GAAAD,IAAA,CAAfC,eAAe;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAEC,SAAS,GAAAH,IAAA,CAATG,SAAS;EAC3D,IAAAC,SAAA,GAAgCb,QAAQ,CAACU,eAAe,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAoClB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,IAAMG,YAAY,GAAGpB,YAAY,CAACqB,MAAM,CAAC;IACvCC,4BAA4B,EAAE,SAA9BA,4BAA4BA,CAAA;MAAA,OAAQZ,SAAS;IAAA;IAC7Ca,mBAAmB,EAAE,SAArBA,mBAAmBA,CAAA,EAAQ;MACzB,IAAIb,SAAS,EAAE;QACbS,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC;IACDK,kBAAkB,EAAE,SAApBA,kBAAkBA,CAAGC,CAAC,EAAEC,YAAY,EAAK;MACvC,IAAIR,UAAU,EAAE;QACdH,WAAW,CAAC;UACVY,CAAC,EAAED,YAAY,CAACE,KAAK,GAAG,EAAE;UAC1BC,CAAC,EAAEH,YAAY,CAACI,KAAK,GAAG;QAC1B,CAAC,CAAC;MACJ;IACF,CAAC;IACDC,qBAAqB,EAAE,SAAvBA,qBAAqBA,CAAA,EAAQ;MAC3B,IAAIb,UAAU,EAAE;QACdC,aAAa,CAAC,KAAK,CAAC;QACpBV,SAAS,CAACK,QAAQ,CAAC;MACrB;IACF;EACF,CAAC,CAAC;EAEF,OACET,IAAA,CAACN,IAAI,EAAAiC,aAAA,CAAAA,aAAA,KACCZ,YAAY,CAACa,WAAW;IAC5BC,KAAK,EAAE,CAACC,MAAM,CAACC,GAAG,EAAE;MAAEC,GAAG,EAAEvB,QAAQ,CAACe,CAAC;MAAES,IAAI,EAAExB,QAAQ,CAACa,CAAC;MAAEY,eAAe,EAAErB,UAAU,GAAG,MAAM,GAAG;IAAc,CAAC,CAAE;IAAAsB,QAAA,EAEjHnC,IAAA,CAACF,KAAK;MAAC+B,KAAK,EAAEC,MAAM,CAACM,QAAS;MAACC,MAAM,EAAEC,OAAO,sBAAsB;IAAE,CAAE;EAAC,EACrE,CAAC;AAEX,CAAC;AAED,IAAMR,MAAM,GAAGlC,UAAU,CAACoB,MAAM,CAAC;EAC/Be,GAAG,EAAE;IACHtB,QAAQ,EAAE,UAAU;IACpB8B,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE;EAChB,CAAC;EACDP,QAAQ,EAAE;IACRG,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAevC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}