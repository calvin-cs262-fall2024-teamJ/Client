{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotesBox = function NotesBox() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isVisible = _useState2[0],\n    setIsVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var toggleVisibility = function toggleVisibility() {\n    setIsVisible(!isVisible);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Pressable, {\n      onPress: toggleVisibility,\n      children: _jsx(Text, {\n        style: styles.textBoxButton,\n        children: \"Toggle Notes Box\"\n      })\n    }), isVisible && _jsx(TextInput, {\n      style: styles.textBox,\n      placeholder: \"Enter notes here...\",\n      value: text,\n      onChangeText: setText,\n      multiline: true,\n      textAlignVertical: \"top\",\n      textAlign: \"left\"\n    })]\n  });\n};\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 30,\n    right: 10,\n    width: 300,\n    padding: 10\n  },\n  textBox: {\n    width: 300,\n    height: height * 3 / 4,\n    textAlignVertical: 'top',\n    textAlign: 'left',\n    borderColor: '#1B1921',\n    borderWidth: 3,\n    padding: 10,\n    backgroundColor: 'white',\n    position: 'relative',\n    top: -40,\n    right: 0\n  },\n  textBoxButton: {\n    textAlign: 'center',\n    padding: 10,\n    backgroundColor: '#fff',\n    borderColor: '#1B1921',\n    borderWidth: 3,\n    position: 'relative',\n    top: -40,\n    right: 0,\n    height: 45,\n    width: 300\n  }\n});\nexport default NotesBox;","map":{"version":3,"names":["React","useState","View","StyleSheet","TextInput","Text","Pressable","Dimensions","jsx","_jsx","jsxs","_jsxs","NotesBox","_useState","_useState2","_slicedToArray","isVisible","setIsVisible","_useState3","_useState4","text","setText","toggleVisibility","style","styles","container","children","onPress","textBoxButton","textBox","placeholder","value","onChangeText","multiline","textAlignVertical","textAlign","_Dimensions$get","get","width","height","create","position","top","right","padding","borderColor","borderWidth","backgroundColor"],"sources":["/home/chase/Client/journeysmith/NotesBox.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Button, TextInput, Text, Pressable, Dimensions, useWindowDimensions } from 'react-native';\nimport { get } from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\n// Component to display a text box for notes.\nconst NotesBox = () => {\n    const [isVisible, setIsVisible] = useState(true);\n    const [text, setText] = useState('');\n\n    \n\n    //Allow users to toggle visibility off and on\n    const toggleVisibility = () => {\n        setIsVisible(!isVisible);\n    };\n\n    //Display the notes box and show/hide button\n    return (\n        <View style={styles.container}>\n            <Pressable onPress={toggleVisibility}>\n                <Text style={styles.textBoxButton}>Toggle Notes Box</Text>\n            </Pressable>\n            {isVisible && (\n                <TextInput\n                    style={styles.textBox}\n                    placeholder=\"Enter notes here...\"\n                    value={text}\n                    onChangeText={setText}\n                    multiline\n                    textAlignVertical=\"top\" \n                    textAlign=\"left\" \n                />\n            )}\n        </View>\n    );\n};\n\nconst { width, height } = Dimensions.get('window');\n\n// Styles for the notes box component(Subject to change)\nconst styles = StyleSheet.create({\n    container: {\n        position: 'absolute',\n        top: 30,\n        right: 10,\n        width: 300,\n        padding: 10,\n    },\n    textBox: {\n        width: 300,\n        height: height*3/4,\n        textAlignVertical: 'top', \n        textAlign: 'left', \n        borderColor: '#1B1921',\n        borderWidth: 3,\n        padding: 10, \n        backgroundColor: 'white',\n        position: 'relative',\n        top: -40,\n        right: 0,\n    },\n    textBoxButton: {\n        textAlign: 'center',\n        padding: 10,\n        backgroundColor: '#fff',\n        borderColor: '#1B1921',\n        borderWidth: 3,\n        position: 'relative',\n        top: -40,\n        right: 0,\n        height: 45,\n        width: 300,\n    },\n});\n\nexport default NotesBox;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAKxC,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACnB,IAAAC,SAAA,GAAkCZ,QAAQ,CAAC,IAAI,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAwBjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAKpB,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC3BL,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EAGD,OACIL,KAAA,CAACT,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BjB,IAAA,CAACH,SAAS;MAACqB,OAAO,EAAEL,gBAAiB;MAAAI,QAAA,EACjCjB,IAAA,CAACJ,IAAI;QAACkB,KAAK,EAAEC,MAAM,CAACI,aAAc;QAAAF,QAAA,EAAC;MAAgB,CAAM;IAAC,CACnD,CAAC,EACXV,SAAS,IACNP,IAAA,CAACL,SAAS;MACNmB,KAAK,EAAEC,MAAM,CAACK,OAAQ;MACtBC,WAAW,EAAC,qBAAqB;MACjCC,KAAK,EAAEX,IAAK;MACZY,YAAY,EAAEX,OAAQ;MACtBY,SAAS;MACTC,iBAAiB,EAAC,KAAK;MACvBC,SAAS,EAAC;IAAM,CACnB,CACJ;EAAA,CACC,CAAC;AAEf,CAAC;AAED,IAAAC,eAAA,GAA0B7B,UAAU,CAAC8B,GAAG,CAAC,QAAQ,CAAC;EAA1CC,KAAK,GAAAF,eAAA,CAALE,KAAK;EAAEC,MAAM,GAAAH,eAAA,CAANG,MAAM;AAGrB,IAAMf,MAAM,GAAGrB,UAAU,CAACqC,MAAM,CAAC;EAC7Bf,SAAS,EAAE;IACPgB,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACTL,KAAK,EAAE,GAAG;IACVM,OAAO,EAAE;EACb,CAAC;EACDf,OAAO,EAAE;IACLS,KAAK,EAAE,GAAG;IACVC,MAAM,EAAEA,MAAM,GAAC,CAAC,GAAC,CAAC;IAClBL,iBAAiB,EAAE,KAAK;IACxBC,SAAS,EAAE,MAAM;IACjBU,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdF,OAAO,EAAE,EAAE;IACXG,eAAe,EAAE,OAAO;IACxBN,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC,EAAE;IACRC,KAAK,EAAE;EACX,CAAC;EACDf,aAAa,EAAE;IACXO,SAAS,EAAE,QAAQ;IACnBS,OAAO,EAAE,EAAE;IACXG,eAAe,EAAE,MAAM;IACvBF,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdL,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC,EAAE;IACRC,KAAK,EAAE,CAAC;IACRJ,MAAM,EAAE,EAAE;IACVD,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAe1B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}